# This deploys a simple Nginx deployment with three replicas.
# kubectl apply -f ngnix-hpa-demo.yaml
# kubectl get deployment nginx-deployment
# kubectl get pods -o wide
# kubectl autoscale deployment nginx-deployment --cpu-percent=50 --min=2 --max=5
# kubectl get hpa
# kubectl edit hpa
# kubectl get pods -o wide
# SERVICEIP=$(kubectl get service nginx-loadbalancer  -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
# Start-Process http://$SERVICEIP
# kubectl run -i --rm httperfpod --image=cyrilbkr/httperf --restart=Never -- /bin/sh -c "httperf --server $SERVICEIP --wsess=10,1000,0 --rate 1"
# kubectl get pods -o wide
# kubectl get hpa
# kubectl edit hpa

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:latest
          resources:
            requests:
                 cpu: 3m
            limits:
                 cpu: 50m
          ports:
            - containerPort: 80
---

apiVersion: v1
kind: Service
metadata:
  name: nginx-loadbalancer
spec:
  type: LoadBalancer
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
